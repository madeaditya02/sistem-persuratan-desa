/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sisteminformasidesa;

import java.lang.reflect.InvocationTargetException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.*;
/**
 *
 * @author I Gusti Ngurah Esa N
 */
public class menu extends javax.swing.JFrame {
    Connection conn;
    public menu() {
        initComponents();
        connectToDatabase();
        setUserJabatan();
        updateMenuComboBox(Session.loggedUser.id_jabatan);
    }
    
    User user = Session.loggedUser;
    int id_jabatan = user.id_jabatan;
    
    private void setUserJabatan() {
    try {
        // Cek apakah koneksi tersedia
        if (conn == null) {
            jLabel2.setText("Error: Koneksi database belum tersedia.");
            return;
        }

        User user = Session.loggedUser;
        if (user == null) {
            jLabel2.setText("Error: User belum login.");
            return;
        }

        int IDJabatan = user.id_jabatan;
        String query = "SELECT Nama_Jabatan FROM jabatan WHERE Id_Jabatan = ?";
        PreparedStatement stmt = conn.prepareStatement(query);
        stmt.setInt(1, IDJabatan);
        ResultSet rs = stmt.executeQuery();

        if (rs.next()) {
            // Menampilkan status jabatan
            jLabel2.setText("Anda sedang login sebagai: " + rs.getString("Nama_Jabatan"));
        } else {
            jLabel2.setText("Jabatan: Tidak ditemukan");
        }
    } catch (SQLException e) {
        jLabel2.setText("Error mendapatkan jabatan: " + e.getMessage());
    }
}

    private void updateMenuComboBox(int id_jabatan) {
        try {
            // Query untuk mendapatkan akses berdasarkan jabatan
            String query = "SELECT a.namaakses, a.classgui FROM akses a " +
                           "JOIN jabatanakses ja ON a.idakses = ja.idakses " +
                           "WHERE ja.Id_Jabatan = ?";
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setInt(1, id_jabatan); // Masukkan id_jabatan
            ResultSet rs = stmt.executeQuery();

            // Bersihkan ComboBox sebelum menambahkan item
            menuComboBox.removeAllItems();
            menuComboBox.addItem("Pilih Akses");

            // Tambahkan akses ke dalam ComboBox
            while (rs.next()) {
                String namaAkses = rs.getString("namaakses");
                menuComboBox.addItem(namaAkses); // Menambahkan item ke ComboBox
                
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error mengupdate menu ComboBox: " + e.getMessage());
        }
    }
   
    private void connectToDatabase() {
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/kantordesafix", "root", "");
            System.out.println("Koneksi Berhasil!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Koneksi Database Gagal: " + e.getMessage());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        menuComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar2.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 51));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("KANTOR DESA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(301, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(276, 276, 276))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(19, 19, 19))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        menuComboBox.setBackground(new java.awt.Color(102, 255, 102));
        menuComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        menuComboBox.addActionListener(this::menuComboBoxActionPerformed);
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuComboBox, 0, 416, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(140, 140, 140))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(jLabel2)
                .addGap(42, 42, 42)
                .addComponent(menuComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(182, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuComboBoxActionPerformed
        String selectedAccess = (String) menuComboBox.getSelectedItem();
    if ("Pilih Akses".equals(selectedAccess)) {
        JOptionPane.showMessageDialog(this, "Silahkan Pilih Menu");
        return;
    }

    try {
        String query = "SELECT classgui FROM akses WHERE namaakses = ?";
        PreparedStatement stmt = conn.prepareStatement(query);
        stmt.setString(1, selectedAccess);
        ResultSet rs = stmt.executeQuery();

        if (rs.next()) {
            String classGui = rs.getString("classgui");
            try {
                Class<?> guiClass = Class.forName("sisteminformasidesa." + classGui);
                JFrame frame = (JFrame) guiClass.getDeclaredConstructor().newInstance();
                frame.setVisible(true);
            } catch (ClassNotFoundException | IllegalAccessException | IllegalArgumentException | InstantiationException | NoSuchMethodException | SecurityException | InvocationTargetException ex) {
                JOptionPane.showMessageDialog(this, "Error membuka GUI: " + ex.getMessage());
            }
        }

        rs.close();
        stmt.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error mendapatkan class GUI: " + e.getMessage());
    }
    }//GEN-LAST:event_menuComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new menu().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JComboBox<String> menuComboBox;
    // End of variables declaration//GEN-END:variables
}
